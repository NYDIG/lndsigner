// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: walletunlocker.proto

package itest

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InitWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	//wallet_password is the passphrase that should be used to encrypt the
	//wallet. This MUST be at least 8 chars in length. After creation, this
	//password is required to unlock the daemon. When using REST, this field
	//must be encoded as base64.
	WalletPassword []byte `protobuf:"bytes,1,opt,name=wallet_password,json=walletPassword,proto3" json:"wallet_password,omitempty"`
	//
	//watch_only is the third option of initializing a wallet: by importing
	//account xpubs only and therefore creating a watch-only wallet that does not
	//contain any private keys. That means the wallet won't be able to sign for
	//any of the keys and _needs_ to be run with a remote signer that has the
	//corresponding private keys and can serve signing RPC requests.
	WatchOnly *WatchOnly `protobuf:"bytes,9,opt,name=watch_only,json=watchOnly,proto3" json:"watch_only,omitempty"`
}

func (x *InitWalletRequest) Reset() {
	*x = InitWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_walletunlocker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitWalletRequest) ProtoMessage() {}

func (x *InitWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_walletunlocker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitWalletRequest.ProtoReflect.Descriptor instead.
func (*InitWalletRequest) Descriptor() ([]byte, []int) {
	return file_walletunlocker_proto_rawDescGZIP(), []int{0}
}

func (x *InitWalletRequest) GetWalletPassword() []byte {
	if x != nil {
		return x.WalletPassword
	}
	return nil
}

func (x *InitWalletRequest) GetWatchOnly() *WatchOnly {
	if x != nil {
		return x.WatchOnly
	}
	return nil
}

type InitWalletResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	//The binary serialized admin macaroon that can be used to access the daemon
	//after creating the wallet. If the stateless_init parameter was set to true,
	//this is the ONLY copy of the macaroon and MUST be stored safely by the
	//caller. Otherwise a copy of this macaroon is also persisted on disk by the
	//daemon, together with other macaroon files.
	AdminMacaroon []byte `protobuf:"bytes,1,opt,name=admin_macaroon,json=adminMacaroon,proto3" json:"admin_macaroon,omitempty"`
}

func (x *InitWalletResponse) Reset() {
	*x = InitWalletResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_walletunlocker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitWalletResponse) ProtoMessage() {}

func (x *InitWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_walletunlocker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitWalletResponse.ProtoReflect.Descriptor instead.
func (*InitWalletResponse) Descriptor() ([]byte, []int) {
	return file_walletunlocker_proto_rawDescGZIP(), []int{1}
}

func (x *InitWalletResponse) GetAdminMacaroon() []byte {
	if x != nil {
		return x.AdminMacaroon
	}
	return nil
}

type WatchOnly struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	//The list of accounts to import. There _must_ be an account for all of lnd's
	//main key scopes: BIP49/BIP84 (m/49'/0'/0', m/84'/0'/0', note that the
	//coin type is always 0, even for testnet/regtest) and lnd's internal key
	//scope (m/1017'/<coin_type>'/<account>'), where account is the key family as
	//defined in `keychain/derivation.go` (currently indices 0 to 9).
	Accounts []*WatchOnlyAccount `protobuf:"bytes,3,rep,name=accounts,proto3" json:"accounts,omitempty"`
}

func (x *WatchOnly) Reset() {
	*x = WatchOnly{}
	if protoimpl.UnsafeEnabled {
		mi := &file_walletunlocker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchOnly) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchOnly) ProtoMessage() {}

func (x *WatchOnly) ProtoReflect() protoreflect.Message {
	mi := &file_walletunlocker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchOnly.ProtoReflect.Descriptor instead.
func (*WatchOnly) Descriptor() ([]byte, []int) {
	return file_walletunlocker_proto_rawDescGZIP(), []int{2}
}

func (x *WatchOnly) GetAccounts() []*WatchOnlyAccount {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type WatchOnlyAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	//Purpose is the first number in the derivation path, must be either 49, 84
	//or 1017.
	Purpose uint32 `protobuf:"varint,1,opt,name=purpose,proto3" json:"purpose,omitempty"`
	//
	//Coin type is the second number in the derivation path, this is _always_ 0
	//for purposes 49 and 84. It only needs to be set to 1 for purpose 1017 on
	//testnet or regtest.
	CoinType uint32 `protobuf:"varint,2,opt,name=coin_type,json=coinType,proto3" json:"coin_type,omitempty"`
	//
	//Account is the third number in the derivation path. For purposes 49 and 84
	//at least the default account (index 0) needs to be created but optional
	//additional accounts are allowed. For purpose 1017 there needs to be exactly
	//one account for each of the key families defined in `keychain/derivation.go`
	//(currently indices 0 to 9)
	Account uint32 `protobuf:"varint,3,opt,name=account,proto3" json:"account,omitempty"`
	//
	//The extended public key at depth 3 for the given account.
	Xpub string `protobuf:"bytes,4,opt,name=xpub,proto3" json:"xpub,omitempty"`
}

func (x *WatchOnlyAccount) Reset() {
	*x = WatchOnlyAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_walletunlocker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchOnlyAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchOnlyAccount) ProtoMessage() {}

func (x *WatchOnlyAccount) ProtoReflect() protoreflect.Message {
	mi := &file_walletunlocker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchOnlyAccount.ProtoReflect.Descriptor instead.
func (*WatchOnlyAccount) Descriptor() ([]byte, []int) {
	return file_walletunlocker_proto_rawDescGZIP(), []int{3}
}

func (x *WatchOnlyAccount) GetPurpose() uint32 {
	if x != nil {
		return x.Purpose
	}
	return 0
}

func (x *WatchOnlyAccount) GetCoinType() uint32 {
	if x != nil {
		return x.CoinType
	}
	return 0
}

func (x *WatchOnlyAccount) GetAccount() uint32 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *WatchOnlyAccount) GetXpub() string {
	if x != nil {
		return x.Xpub
	}
	return ""
}

var File_walletunlocker_proto protoreflect.FileDescriptor

var file_walletunlocker_proto_rawDesc = []byte{
	0x0a, 0x14, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6c, 0x6e, 0x72, 0x70, 0x63, 0x22, 0x6d, 0x0a,
	0x11, 0x49, 0x6e, 0x69, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2f, 0x0a, 0x0a, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6c, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x6e, 0x6c,
	0x79, 0x52, 0x09, 0x77, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0x3b, 0x0a, 0x12,
	0x49, 0x6e, 0x69, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x6d, 0x61, 0x63, 0x61,
	0x72, 0x6f, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x4d, 0x61, 0x63, 0x61, 0x72, 0x6f, 0x6f, 0x6e, 0x22, 0x40, 0x0a, 0x09, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x33, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x6e, 0x72, 0x70, 0x63,
	0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x6e, 0x6c, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x77, 0x0a, 0x10, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x4f, 0x6e, 0x6c, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x69,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6f,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x78, 0x70, 0x75, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x78, 0x70, 0x75, 0x62, 0x32, 0x53, 0x0a, 0x0e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x55, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x0a, 0x49, 0x6e, 0x69, 0x74, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x12, 0x18, 0x2e, 0x6c, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x69,
	0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x6c, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x70, 0x61,
	0x79, 0x2f, 0x6c, 0x6e, 0x64, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x2f, 0x69, 0x74, 0x65, 0x73,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_walletunlocker_proto_rawDescOnce sync.Once
	file_walletunlocker_proto_rawDescData = file_walletunlocker_proto_rawDesc
)

func file_walletunlocker_proto_rawDescGZIP() []byte {
	file_walletunlocker_proto_rawDescOnce.Do(func() {
		file_walletunlocker_proto_rawDescData = protoimpl.X.CompressGZIP(file_walletunlocker_proto_rawDescData)
	})
	return file_walletunlocker_proto_rawDescData
}

var file_walletunlocker_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_walletunlocker_proto_goTypes = []interface{}{
	(*InitWalletRequest)(nil),  // 0: lnrpc.InitWalletRequest
	(*InitWalletResponse)(nil), // 1: lnrpc.InitWalletResponse
	(*WatchOnly)(nil),          // 2: lnrpc.WatchOnly
	(*WatchOnlyAccount)(nil),   // 3: lnrpc.WatchOnlyAccount
}
var file_walletunlocker_proto_depIdxs = []int32{
	2, // 0: lnrpc.InitWalletRequest.watch_only:type_name -> lnrpc.WatchOnly
	3, // 1: lnrpc.WatchOnly.accounts:type_name -> lnrpc.WatchOnlyAccount
	0, // 2: lnrpc.WalletUnlocker.InitWallet:input_type -> lnrpc.InitWalletRequest
	1, // 3: lnrpc.WalletUnlocker.InitWallet:output_type -> lnrpc.InitWalletResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_walletunlocker_proto_init() }
func file_walletunlocker_proto_init() {
	if File_walletunlocker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_walletunlocker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_walletunlocker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitWalletResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_walletunlocker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchOnly); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_walletunlocker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchOnlyAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_walletunlocker_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_walletunlocker_proto_goTypes,
		DependencyIndexes: file_walletunlocker_proto_depIdxs,
		MessageInfos:      file_walletunlocker_proto_msgTypes,
	}.Build()
	File_walletunlocker_proto = out.File
	file_walletunlocker_proto_rawDesc = nil
	file_walletunlocker_proto_goTypes = nil
	file_walletunlocker_proto_depIdxs = nil
}
